## 30天自制操作系统

这是川合秀实的《30天自制操作系统》的git管理版本。你可以轻易地用git来对其进行管理，建立分支，增减功能，进而做成自己的更为复杂的操作系统。

另外，因为是新手向的书，书中有大量的很简单的概念，为了大家阅读和学习方便，我将每一天所完成的内容作了一个整理，并用中文对一些比较复杂的内容作出了注释。

OK，向着属于你的操作系统进发吧！

### 进度条

#### DAY1

使用汇编完成了 helloos.nas ,经过 asm 生成二进制文件 helloos.img,使用　QEMU　软件模拟　PC　输出　hello world 。

#### DAY2

加入makefile。制作启动区。
汇编写出 helloos.nas , asm 后输出 ipl.bin/ipl.lst, 用磁盘映像管理工具 edimg.exe 生成helloos.img.

#### DAY3

制作启动区（从软盘读取数据填充到内存的对应位置），汇编写出一个简易的操作系统（黑屏），用c语言写出停止函数,用汇编写出停止的底层实现，用作者实现的编译器编译后三者链接后输出二进制磁盘映像交由系统启动。

#### DAY4

用汇编实现对显存和中断标志的io，C语言实现绘图，调色函数，在main函数中实现绘制系统框架图。编译链接后交由系统运行。

#### DAY5 

用 struct （结构体） 存储显存信息，加入字体文件hankaku.txt，C语言绘制鼠标图形，加入字符显示函数，引入GDT（全局段号记录表）和IDT（中断记录表），利用结构体和C语言实现读写 GDT 和 IDT 。

#### DAY6

将源文件分割成多个文件，重复部分整理至共有的头文件中。利用通配符简化makefile，设定PIC（可编程中断控制器），C语言实现鼠标键盘中断处理函数，汇编将中断函数处理包装（中断返回，中断标志置位）后注册至IDT。

#### DAY7

完善键盘中断处理，加入键盘输入缓存（FIFO BUF），利用环形队列实现结构体 KEYBUF， 整理至 FIFO.C 文件中；加入鼠标控制电路初始化代码，加入鼠标数据取得方法与中断反馈代码（和键盘类似）。

#### DAY8

加入鼠标数据处理与解读（读取鼠标数据【3连字节】，验证，转换为坐标/状态/按钮值），鼠标移动（频繁擦除重画鼠标ico）。解释了asmhead.nas头文件内容。

